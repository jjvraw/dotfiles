# For debugging
# display-message "Loading config file"
unbind r
bind r source-file ~/.tmux.conf

set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:RGB"

set -sg escape-time 0
set -g focus-events on
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"
bind Space last-window
set-option -g history-limit 5000
bind-key "w" switch-client -l

set-option -g status-position top
set -g mouse on

bind  c  new-window      -c "#{pane_current_path}"
bind  %  split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# Window renaming
set-option -g automatic-rename off
set-option -g allow-rename on

# Status bar updates every 15s by default**, change to 1s here 
set -g status-interval 1

# Tmux Navigator
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Catppuccin 
set -g @catppuccin_flavor "mocha"

# Window Modules
set -g @catppuccin_window_status_style "rounded"

# Use consistent window naming for both active and inactive windows
# This ensures window names set by Neovim or other persist
# across all windows and don't revert to hostname when inactive
# Default is #T (terminal title)
set -g @catppuccin_window_default_text " #W"
set -g @catppuccin_window_text " #{?#{m:*nvim*,#{pane_current_command}},#W,#{b:pane_current_path}}"
set -g @catppuccin_window_current_text " #{?#{m:*nvim*,#{pane_current_command}},#W,#{b:pane_current_path}}"

# Status Modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right ""

set -g @catppuccin_status_right_separator "î‚´ "
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"

set -g status-right "#{E:@catppuccin_status_date_time}"
set -ag status-right "#{E:@catppuccin_status_uptime}"
# set -agF status-right "#{E:@catppuccin_status_directory}"
# set -agF status-right "#{E:@catppuccin_status_gitmux}"
set -agF status-right "#{E:@catppuccin_status_cpu}"
set -agF status-right "#{E:@catppuccin_status_load}"
set -agF status-right "#{E:@catppuccin_status_host}"

# Better copy and paste support
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"


set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'catppuccin/tmux#v2.1.3' # https://github.com/catppuccin/tmux
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

run ~/.tmux/plugins/tmux/catppuccin.tmux

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'
